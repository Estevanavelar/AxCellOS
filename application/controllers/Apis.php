<?php if (!defined("BASEPATH")) { exit("No direct script access allowed"); } class Apis extends MY_Controller { public function __construct() { parent::__construct(); $this->load->model("apis_model"); $this->data["menuApis"] = "Apis"; } public function index() { $this->gerenciar(); } public function gerenciar() { if (!$this->permission->checkPermission($this->session->userdata("permissao"), "vApi")) { $this->session->set_flashdata("error", "Você não tem permissão para visualizar APIs."); redirect(base_url()); } $this->load->library("pagination"); $this->data["configuration"]["base_url"] = site_url("apis/gerenciar/"); $this->data["configuration"]["total_rows"] = $this->apis_model->count("apis"); $this->pagination->initialize($this->data["configuration"]); $this->data["results"] = $this->apis_model->get("apis", "*", "", $this->data["configuration"]["per_page"], $this->uri->segment(3)); $this->data["view"] = "apis/apis"; return $this->layout(); } public function adicionar() { if (!$this->permission->checkPermission($this->session->userdata("permissao"), "aApi")) { $this->session->set_flashdata("error", "Você não tem permissão para adicionar APIs."); redirect(base_url()); } $this->load->library("form_validation"); $this->data["custom_error"] = ""; if ($this->form_validation->run("apis") == false) { $this->data["custom_error"] = (validation_errors() ? "<div class=\"form_error\">" . validation_errors() . "</div>" : false); } else { $data = [ "nome" => $this->input->post("nome"), "chave" => $this->input->post("chave"), "status" => $this->input->post("status"), "usuarios_id" => $this->session->userdata("id_admin"), ]; if ($this->apis_model->add("apis", $data) == true) { $this->session->set_flashdata("success", "API adicionada com sucesso!"); log_info("Adicionou uma API"); redirect(site_url("apis/adicionar/")); } else { $this->data["custom_error"] = "<div class=\"form_error\"><p>Ocorreu um erro.</p></div>"; } } $this->data["view"] = "apis/adicionarApi"; return $this->layout(); } public function editar() { if (!$this->uri->segment(3) || !is_numeric($this->uri->segment(3))) { $this->session->set_flashdata("error", "Item não pode ser encontrado, parâmetro não foi passado corretamente."); redirect("axcell"); } if (!$this->permission->checkPermission($this->session->userdata("permissao"), "eApi")) { $this->session->set_flashdata("error", "Você não tem permissão para editar APIs."); redirect(base_url()); } $this->load->library("form_validation"); $this->data["custom_error"] = ""; if ($this->form_validation->run("apis") == false) { $this->data["custom_error"] = (validation_errors() ? "<div class=\"form_error\">" . validation_errors() . "</div>" : false); } else { $data = [ "nome" => $this->input->post("nome"), "chave" => $this->input->post("chave"), "status" => $this->input->post("status"), ]; if ($this->apis_model->edit("apis", $data, "idApi", $this->input->post("idApi")) == true) { $this->session->set_flashdata("success", "API editada com sucesso!"); log_info("Alterou uma API. ID: " . $this->input->post("idApi")); redirect(site_url("apis/editar/") . $this->input->post("idApi")); } else { $this->data["custom_error"] = "<div class=\"form_error\"><p>Ocorreu um erro</p></div>"; } } $this->data["result"] = $this->apis_model->getById($this->uri->segment(3)); $this->data["view"] = "apis/editarApi"; return $this->layout(); } public function excluir() { if (!$this->permission->checkPermission($this->session->userdata("permissao"), "dApi")) { $this->session->set_flashdata("error", "Você não tem permissão para excluir APIs."); redirect(base_url()); } $id = $this->input->post("id"); if ($id == null) { $this->session->set_flashdata("error", "Erro ao tentar excluir API."); redirect(base_url() . "index.php/apis/gerenciar/"); } $this->apis_model->delete("apis", "idApi", $id); log_info("Removeu uma API. ID: " . $id); $this->session->set_flashdata("success", "API excluída com sucesso!"); redirect(site_url("apis/gerenciar/")); } }

