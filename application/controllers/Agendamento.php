<?php if (!defined('BASEPATH')) { exit('No direct script access allowed'); } class Agendamento extends MY_Controller { public function __construct() { parent::__construct(); $this->load->model('agendamento_model'); $this->data['menuAgendamento'] = 'Agendamento'; } public function index() { $this->gerenciar(); } public function gerenciar() { if (!$this->permission->checkPermission($this->session->userdata('permissao'), 'vAgendamento')) { $this->session->set_flashdata('error', 'Você não tem permissão para visualizar agendamentos.'); redirect(base_url()); } $this->load->library('pagination'); $this->data['configuration']['base_url'] = site_url('agendamento/gerenciar/'); $this->data['configuration']['total_rows'] = $this->agendamento_model->count('agendamentos'); $this->pagination->initialize($this->data['configuration']); $this->data['results'] = $this->agendamento_model->get('agendamentos', '*', '', $this->data['configuration']['per_page'], $this->uri->segment(3)); $this->data['view'] = 'agendamento/agendamentos'; return $this->layout(); } public function adicionar() { if (!$this->permission->checkPermission($this->session->userdata('permissao'), 'aAgendamento')) { $this->session->set_flashdata('error', 'Você não tem permissão para adicionar agendamentos.'); redirect(base_url()); } $this->load->library('form_validation'); $this->data['custom_error'] = ''; if ($this->form_validation->run('agendamentos') == false) { $this->data['custom_error'] = (validation_errors() ? '<div class="form_error">' . validation_errors() . '</div>' : false); } else { $data = [ 'data' => $this->input->post('data'), 'hora' => $this->input->post('hora'), 'descricao' => $this->input->post('descricao'), 'clientes_id' => $this->input->post('clientes_id'), 'usuarios_id' => $this->session->userdata('id_admin'), ]; if ($this->agendamento_model->add('agendamentos', $data) == true) { $this->session->set_flashdata('success', 'Agendamento adicionado com sucesso!'); log_info('Adicionou um agendamento'); redirect(site_url('agendamento/adicionar/')); } else { $this->data['custom_error'] = '<div class="form_error"><p>Ocorreu um erro.</p></div>'; } } $this->data['view'] = 'agendamento/adicionarAgendamento'; return $this->layout(); } public function editar() { if (!$this->uri->segment(3) || !is_numeric($this->uri->segment(3))) { $this->session->set_flashdata('error', 'Item não pode ser encontrado, parâmetro não foi passado corretamente.'); redirect('axcell'); } if (!$this->permission->checkPermission($this->session->userdata('permissao'), 'eAgendamento')) { $this->session->set_flashdata('error', 'Você não tem permissão para editar agendamentos.'); redirect(base_url()); } $this->load->library('form_validation'); $this->data['custom_error'] = ''; if ($this->form_validation->run('agendamentos') == false) { $this->data['custom_error'] = (validation_errors() ? '<div class="form_error">' . validation_errors() . '</div>' : false); } else { $data = [ 'data' => $this->input->post('data'), 'hora' => $this->input->post('hora'), 'descricao' => $this->input->post('descricao'), 'clientes_id' => $this->input->post('clientes_id'), 'usuarios_id' => $this->session->userdata('id_admin'), ]; if ($this->agendamento_model->edit('agendamentos', $data, 'idAgendamento', $this->input->post('idAgendamento')) == true) { $this->session->set_flashdata('success', 'Agendamento editado com sucesso!'); log_info('Alterou um agendamento. ID: ' . $this->input->post('idAgendamento')); redirect(site_url('agendamento/editar/') . $this->input->post('idAgendamento')); } else { $this->data['custom_error'] = '<div class="form_error"><p>Ocorreu um erro</p></div>'; } } $this->data['result'] = $this->agendamento_model->getById($this->uri->segment(3)); $this->data['view'] = 'agendamento/editarAgendamento'; return $this->layout(); } public function excluir() { if (!$this->permission->checkPermission($this->session->userdata('permissao'), 'dAgendamento')) { $this->session->set_flashdata('error', 'Você não tem permissão para excluir agendamentos.'); redirect(base_url()); } $id = $this->input->post('id'); if ($id == null) { $this->session->set_flashdata('error', 'Erro ao tentar excluir agendamento.'); redirect(base_url() . 'index.php/agendamento/gerenciar/'); } $this->agendamento_model->delete('agendamentos', 'idAgendamento', $id); log_info('Removeu um agendamento. ID: ' . $id); $this->session->set_flashdata('success', 'Agendamento excluido com sucesso!'); redirect(site_url('agendamento/gerenciar/')); } }

