<?php if (!defined('BASEPATH')) { exit('No direct script access allowed'); } class Estoque extends CI_Controller { public function __construct() { parent::__construct(); if ((!$this->session->userdata('logado')) || (!$this->session->userdata('id_admin'))) { redirect('axcell/login'); }$this->load->model(\'estoque_model\');
        $this->load->model(\'axcell_model\');$this->data['menuEstoque'] = 'Estoque'; } public function index() { $this->gerenciar(); } public function gerenciar() { $this->load->library('pagination'); $this->data['configuration'] = $this->axcell_model->get('configuracoes', 'configuracoes.control_estoque')[0]; $this->data['produtos'] = $this->estoque_model->getProdutos('produtos', '*', '', $this->config->item('per_page'), $this->uri->segment(3)); $this->data['view'] = 'estoque/produtos'; $this->load->view('tema/topo', $this->data); } public function adicionar() { $this->load->library('form_validation'); $this->data['custom_error'] = ''; if ($this->form_validation->run('produtos') == false) { $this->data['custom_error'] = (validation_errors() ? '<div class="form_error">' . validation_errors() . '</div>' : false); } else { $data = [ 'codDeBarra' => $this->input->post('codDeBarra'), 'descricao' => $this->input->post('descricao'), 'unidade' => $this->input->post('unidade'), 'precoCompra' => $this->input->post('precoCompra'), 'precoVenda' => $this->input->post('precoVenda'), 'estoque' => $this->input->post('estoque'), 'estoqueMinimo' => $this->input->post('estoqueMinimo'), 'saida' => $this->input->post('saida'), 'entrada' => $this->input->post('entrada'), ]; if ($this->estoque_model->add('produtos', $data) == true) { $this->session->set_flashdata('success', 'Produto adicionado com sucesso!'); redirect(base_url() . 'index.php/estoque/gerenciar'); } else { $this->data['custom_error'] = '<div class="form_error"><p>Ocorreu um erro.</p></div>'; } } $this->data['view'] = 'estoque/adicionarProduto'; $this->load->view('tema/topo', $this->data); } public function editar() { $this->load->library('form_validation'); $this->data['custom_error'] = ''; if ($this->form_validation->run('produtos') == false) { $this->data['custom_error'] = (validation_errors() ? '<div class="form_error">' . validation_errors() . '</div>' : false); } else { $data = [ 'codDeBarra' => $this->input->post('codDeBarra'), 'descricao' => $this->input->post('descricao'), 'unidade' => $this->input->post('unidade'), 'precoCompra' => $this->input->post('precoCompra'), 'precoVenda' => $this->input->post('precoVenda'), 'estoque' => $this->input->post('estoque'), 'estoqueMinimo' => $this->input->post('estoqueMinimo'), 'saida' => $this->input->post('saida'), 'entrada' => $this->input->post('entrada'), ]; if ($this->estoque_model->edit('produtos', $data, 'idProdutos', $this->input->post('idProdutos')) == true) { $this->session->set_flashdata('success', 'Produto editado com sucesso!'); redirect(base_url() . 'index.php/estoque/gerenciar'); } else { $this->data['custom_error'] = '<div class="form_error"><p>Ocorreu um erro.</p></div>'; } } $this->data['produto'] = $this->estoque_model->getById('produtos', 'idProdutos', $this->uri->segment(3)); $this->data['view'] = 'estoque/editarProduto'; $this->load->view('tema/topo', $this->data); } public function visualizar() { $this->data['custom_error'] = ''; $this->data['produto'] = $this->estoque_model->getById('produtos', 'idProdutos', $this->uri->segment(3)); $this->data['view'] = 'estoque/visualizarProduto'; $this->load->view('tema/topo', $this->data); } public function excluir() { $id = $this->input->post('id'); if ($id == null) { $this->session->set_flashdata('error', 'Erro ao tentar excluir produto.'); redirect(base_url() . 'index.php/estoque/gerenciar'); } $this->estoque_model->delete('produtos', 'idProdutos', $id); $this->session->set_flashdata('success', 'Produto excluido com sucesso!'); redirect(base_url() . 'index.php/estoque/gerenciar'); } }

